set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
#y[c(1,10,100)] <- y[c(1,10,100)] + rnorm(3, 0, 10)
nmcmc <- 3000
mod <- bmars(x, its = nmcmc, nu = 1000, verbose = TRUE)
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)])])
X <- mod$X
beta <- mod$beta
plot(mod$nknot, type = "l",
main = "Number of knots over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
plot(mod$lam, type = "l",
main = "Lambda values over time")
matplot(mod$mat_beta, type = "l",
main = "Plot of regression coefficients over time")
matplot(sqrt(mod$mat_w[,-c(1,10,100)]), type="l",
main = "Plot of v_i values over time")
plot(X %*% beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
var((y-(X%*%beta))[-c(1,10,100)])
rm(list = ls())
source("robust_bmars2.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
#y[c(1,10,100)] <- y[c(1,10,100)] + rnorm(3, 0, 10)
nmcmc <- 300
mod <- bmars(x, its = nmcmc, nu = 1000, verbose = TRUE)
rm(list = ls())
source("robust_bmars2.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
#y[c(1,10,100)] <- y[c(1,10,100)] + rnorm(3, 0, 10)
nmcmc <- 300
mod <- bmars(x, its = nmcmc, nu = 1000, verbose = TRUE)
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)])])
X <- mod$X
beta <- mod$beta
plot(mod$nknot, type = "l",
main = "Number of knots over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
rm(list = ls())
source("robust_bmars2.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
#y[c(1,10,100)] <- y[c(1,10,100)] + rnorm(3, 0, 10)
nmcmc <- 1000
mod <- bmars(x, its = nmcmc, nu = 1000, verbose = TRUE)
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)])])
X <- mod$X
beta <- mod$beta
plot(mod$nknot, type = "l",
main = "Number of knots over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
plot(mod$lam, type = "l",
main = "Lambda values over time")
matplot(mod$mat_beta, type = "l",
main = "Plot of regression coefficients over time")
matplot(sqrt(mod$mat_w[,-c(1,10,100)]), type="l",
main = "Plot of v_i values over time")
plot(X %*% beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
var((y-(X%*%beta))[-c(1,10,100)])
rm(list = ls())
source("robust_bmars2.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
#y[c(1,10,100)] <- y[c(1,10,100)] + rnorm(3, 0, 10)
nmcmc <- 500
mod <- bmars(x, its = nmcmc, nu = 1000, verbose = TRUE)
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)])])
X <- mod$X
beta <- mod$beta
plot(mod$nknot, type = "l",
main = "Number of knots over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
plot(mod$lam, type = "l",
main = "Lambda values over time")
matplot(mod$mat_beta, type = "l",
main = "Plot of regression coefficients over time")
matplot(sqrt(mod$mat_w[,-c(1,10,100)]), type="l",
main = "Plot of v_i values over time")
plot(X %*% beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
var((y-(X%*%beta))[-c(1,10,100)])
rm(list = ls())
source("robust_bmars2.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
#y[c(1,10,100)] <- y[c(1,10,100)] + rnorm(3, 0, 10)
nmcmc <- 500
mod <- bmars(x, its = nmcmc, nu = 1000, verbose = TRUE)
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)])])
X <- mod$X
beta <- mod$beta
plot(mod$nknot, type = "l",
main = "Number of knots over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
plot(mod$lam, type = "l",
main = "Lambda values over time")
matplot(mod$mat_beta, type = "l",
main = "Plot of regression coefficients over time")
matplot(sqrt(mod$mat_w[,-c(1,10,100)]), type="l",
main = "Plot of v_i values over time")
plot(X %*% beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
var((y-(X%*%beta))[-c(1,10,100)])
X <- mod$X
beta <- mod$beta
plot(mod$nknot, type = "l",
main = "Number of knots over time")
plot(mod$alpha, type = "l",
main = "Sigma^2 values over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
plot(mod$lam, type = "l",
main = "Lambda values over time")
matplot(mod$mat_beta, type = "l",
main = "Plot of regression coefficients over time")
matplot(sqrt(mod$mat_w[,-c(1,10,100)]), type="l",
main = "Plot of v_i values over time")
X <- mod$X
beta <- mod$beta
plot(mod$nknot, type = "l",
main = "Number of knots over time")
plot(mod$alpha, type = "l",
main = "Sigma^2 values over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
plot(mod$lam, type = "l",
main = "Lambda values over time")
matplot(mod$mat_beta, type = "l",
main = "Plot of regression coefficients over time")
matplot(sqrt(mod$mat_w), type="l",
main = "Plot of v_i values over time")
matplot(sqrt(mod$mat_u), type="l",
main = "Plot of u_i values over time")
plot(X %*% beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
rm(list = ls())
source("robust_bmars.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
#y[c(1,10,100)] <- y[c(1,10,100)] + rnorm(3, 0, 10)
nmcmc <- 500
mod <- bmars(x, its = nmcmc, nu = 1000, verbose = TRUE)
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)])])
X <- mod$X
beta <- mod$beta
plot(mod$nknot, type = "l",
main = "Number of knots over time")
plot(mod$alpha, type = "l",
main = "alpha^2 values over time")
X <- mod$X
beta <- mod$beta
plot(mod$nknot, type = "l",
main = "Number of knots over time")
# plot(mod$alpha, type = "l",
#      main = "alpha^2 values over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
plot(mod$lam, type = "l",
main = "Lambda values over time")
# matplot(mod$mat_beta, type = "l",
#         main = "Plot of regression coefficients over time")
matplot(sqrt(mod$mat_w), type="l",
main = "Plot of v_i values over time")
# matplot(sqrt(mod$mat_u), type="l",
#         main = "Plot of u_i values over time")
plot(X %*% beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
rm(list = ls())
source("robust_bmars3.R")
rm(list = ls())
source("robust_bmars3.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
#y[c(1,10,100)] <- y[c(1,10,100)] + rnorm(3, 0, 10)
nmcmc <- 500
mod <- bmars(x, its = nmcmc, nu = 1000, verbose = TRUE)
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)])])
X <- mod$X
beta <- mod$beta
plot(mod$nknot, type = "l",
main = "Number of knots over time")
# plot(mod$alpha, type = "l",
#      main = "alpha^2 values over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
plot(mod$lam, type = "l",
main = "Lambda values over time")
# matplot(mod$mat_beta, type = "l",
#         main = "Plot of regression coefficients over time")
matplot(sqrt(mod$mat_w), type="l",
main = "Plot of v_i values over time")
# matplot(sqrt(mod$mat_u), type="l",
#         main = "Plot of u_i values over time")
plot(X %*% beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
rm(list = ls())
source("robust_bmars3.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
#y[c(1,10,100)] <- y[c(1,10,100)] + rnorm(3, 0, 10)
nmcmc <- 500
mod <- bmars(x, its = nmcmc, nu = 1000, verbose = TRUE)
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)])])
X <- mod$X
beta <- mod$beta
plot(mod$nknot, type = "l",
main = "Number of knots over time")
# plot(mod$alpha, type = "l",
#      main = "alpha^2 values over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
plot(mod$lam, type = "l",
main = "Lambda values over time")
# matplot(mod$mat_beta, type = "l",
#         main = "Plot of regression coefficients over time")
matplot(sqrt(mod$mat_w), type="l",
main = "Plot of v_i values over time")
# matplot(sqrt(mod$mat_u), type="l",
#         main = "Plot of u_i values over time")
plot(X %*% beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
var((y-(X%*%beta))[-c(1,10,100)])
var((y-(X%*%beta)))
tail(mod$mat_sig)
tail(mod$mat_v)
tail(mod$mat_w)
tail(sqrt(mod$mat_w))
tail(sqrt(mod$mat_w[,1:25]))
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)])])
beta
beta %>% as.vector()
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)])])
beta %>% as.vector()
rm(list = ls())
source("robust_bmars3.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
#y[c(1,10,100)] <- y[c(1,10,100)] + rnorm(3, 0, 10)
nmcmc <- 500
mod <- bmars(x, its = nmcmc, nu = 1000, verbose = TRUE)
rm(list = ls())
source("robust_bmars3.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
#y[c(1,10,100)] <- y[c(1,10,100)] + rnorm(3, 0, 10)
nmcmc <- 500
mod <- bmars(x, its = nmcmc, nu = 1000, verbose = TRUE)
rm(list = ls())
source("robust_bmars3.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
#y[c(1,10,100)] <- y[c(1,10,100)] + rnorm(3, 0, 10)
nmcmc <- 500
mod <- bmars(x, its = nmcmc, nu = 1000, verbose = TRUE)
rm(list = ls())
source("robust_bmars3.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
#y[c(1,10,100)] <- y[c(1,10,100)] + rnorm(3, 0, 10)
nmcmc <- 500
mod <- bmars(x, its = nmcmc, nu = 1000, verbose = TRUE)
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)]+1)])
beta %>% as.vector()
beta
X <- mod$X
beta <- mod$beta
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)]+1)])
beta
X <- mod$X
beta <- mod$beta
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)]+1)])
beta %>% as.vector()
X <- mod$X
beta <- mod$beta
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)]+1)])
beta %>% as.vector()
plot(mod$nknot, type = "l",
main = "Number of knots over time")
# plot(mod$alpha, type = "l",
#      main = "alpha^2 values over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
plot(mod$lam, type = "l",
main = "Lambda values over time")
# matplot(mod$mat_beta, type = "l",
#         main = "Plot of regression coefficients over time")
matplot(sqrt(mod$mat_w), type="l",
main = "Plot of v_i values over time")
# matplot(sqrt(mod$mat_u), type="l",
#         main = "Plot of u_i values over time")
plot(X %*% beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
tail(mod$mat_sig)
tail(sqrt(mod$mat_w[,1:25]))
var((y-(X%*%beta)))
rm(list = ls())
source("robust_bmars3.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
#y[c(1,10,100)] <- y[c(1,10,100)] + rnorm(3, 0, 10)
nmcmc <- 10000
mod <- bmars(x, its = nmcmc, nu = 1000, verbose = TRUE)
X <- mod$X
beta <- mod$beta
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)]+1)])
beta %>% as.vector()
plot(mod$nknot, type = "l",
main = "Number of knots over time")
# plot(mod$alpha, type = "l",
#      main = "alpha^2 values over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
plot(mod$lam, type = "l",
main = "Lambda values over time")
# matplot(mod$mat_beta, type = "l",
#         main = "Plot of regression coefficients over time")
matplot(sqrt(mod$mat_w), type="l",
main = "Plot of v_i values over time")
# matplot(sqrt(mod$mat_u), type="l",
#         main = "Plot of u_i values over time")
plot(X %*% beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
tail(mod$mat_sig)
tail(sqrt(mod$mat_w[,1:25]))
var((y-(X%*%beta)))
knitr::opts_chunk$set(echo = FALSE)
hist(rt(1000, 3))
hist(rt(1000, 1))
hist(rt(1000, 90))
hist(rt(1000, 800))
hist(rt(1000, 800))
hist(rnorm(1000))
hist(rt(1000, 5))
hist(rt(1000, 800))
hist(rnorm(1000))
