abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
xtest <- runif(1000*10, 1000, 10)
pred <- predict.bmars(xtest)
source('~/Desktop/LANL/Git/LANL-CCS-6/Bayesian Splines/bmars_script.R')
xtest <- runif(1000*10, 1000, 10)
pred <- predict.bmars(xtest)
rm(list = ls())
source("bmars_script.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
iter <- 10000
mod <- bmars(x, its = iter)
burn <- 1:750
X <- mod$X
beta <- mod$beta
mod$count
plot(mod$nknot[-burn], type = "l",
main = "Number of knots over time")
plot(mod$mat_sig[-burn], type = "l",
main = "Sigma^2 values over time")
plot(mod$lam[-burn], type = "l",
main = "Lambda values over time")
matplot(mod$mat_beta[-burn,], type = "l",
main = "Plot of regression coefficients over time")
plot(X%*%beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
xtest <- runif(1000*10, 1000, 10)
pred <- predict.bmars(xtest)
xtest <- runif(1000*10, 1000, 10)
pred <- predict.bmars(xtest)
rm(list = ls())
source("bmars_script.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
iter <- 10000
mod <- bmars(x, its = iter)
burn <- 1:750
X <- mod$X
beta <- mod$beta
mod$count
plot(mod$nknot[-burn], type = "l",
main = "Number of knots over time")
plot(mod$mat_sig[-burn], type = "l",
main = "Sigma^2 values over time")
plot(mod$lam[-burn], type = "l",
main = "Lambda values over time")
matplot(mod$mat_beta[-burn,], type = "l",
main = "Plot of regression coefficients over time")
plot(X%*%beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
xtest <- runif(1000*10, 1000, 10)
pred <- predict.bmars(mod, xtest)
xtest <- matrix(runif(1000*10, 1000, 10))
pred <- predict.bmars(mod, xtest)
xtest <- matrix(runif(1000*10, 1000, 10))
pred <- predict.bmars(mod, xtest)
spline.basis
xtest <- matrix(runif(1000*10, 1000, 10))
pred <- predict.bmars(mod, X = xtest)
mod$int
mod$nknot[1]
xtest <- matrix(runif(1000*10, 1000, 10))
pred <- predict.bmars(mod, X = xtest)
rm(list = ls())
source("bmars_script.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
iter <- 10000
mod <- bmars(x, its = iter)
burn <- 1:750
X <- mod$X
beta <- mod$beta
mod$count
plot(mod$nknot[-burn], type = "l",
main = "Number of knots over time")
plot(mod$mat_sig[-burn], type = "l",
main = "Sigma^2 values over time")
plot(mod$lam[-burn], type = "l",
main = "Lambda values over time")
matplot(mod$mat_beta[-burn,], type = "l",
main = "Plot of regression coefficients over time")
plot(X%*%beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
xtest <- matrix(runif(1000*10, 1000, 10))
pred <- predict.bmars(mod, X = xtest)
spline.basis
rm(list = ls())
source("bmars_script.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
iter <- 10000
mod <- bmars(x, its = iter)
burn <- 1:750
X <- mod$X
beta <- mod$beta
mod$count
plot(mod$nknot[-burn], type = "l",
main = "Number of knots over time")
plot(mod$mat_sig[-burn], type = "l",
main = "Sigma^2 values over time")
plot(mod$lam[-burn], type = "l",
main = "Lambda values over time")
matplot(mod$mat_beta[-burn,], type = "l",
main = "Plot of regression coefficients over time")
plot(X%*%beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
xtest <- matrix(runif(1000*10, 1000, 10))
pred <- predict.bmars(mod, X = xtest)
rm(list = ls())
source("bmars_script.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
iter <- 10000
mod <- bmars(x, its = iter)
rm(list = ls())
source("bmars_script.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
iter <- 10000
mod <- bmars(x, its = iter)
burn <- 1:750
X <- mod$X
beta <- mod$beta
mod$count
plot(mod$nknot[-burn], type = "l",
main = "Number of knots over time")
plot(mod$mat_sig[-burn], type = "l",
main = "Sigma^2 values over time")
plot(mod$lam[-burn], type = "l",
main = "Lambda values over time")
matplot(mod$mat_beta[-burn,], type = "l",
main = "Plot of regression coefficients over time")
plot(X%*%beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
xtest <- matrix(runif(1000*10, 1000, 10))
pred <- predict.bmars(mod, X = xtest)
xtest <- matrix(runif(1000*10, 1000, 10))
pred <- predict.bmars(mod, X = xtest)
mod$nknot
length(mod$nknot)
X
rm(list = ls())
source("bmars_script.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
iter <- 10000
mod <- bmars(x, its = iter)
burn <- 1:750
X <- mod$X
beta <- mod$beta
mod$count
plot(mod$nknot[-burn], type = "l",
main = "Number of knots over time")
plot(mod$mat_sig[-burn], type = "l",
main = "Sigma^2 values over time")
plot(mod$lam[-burn], type = "l",
main = "Lambda values over time")
matplot(mod$mat_beta[-burn,], type = "l",
main = "Plot of regression coefficients over time")
plot(X%*%beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
xtest <- matrix(runif(1000*10, 1000, 10))
pred <- predict.bmars(mod, X = xtest)
rm(list = ls())
source("bmars_script.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
iter <- 10000
mod <- bmars(x, its = iter)
burn <- 1:750
X <- mod$X
beta <- mod$beta
mod$count
plot(mod$nknot[-burn], type = "l",
main = "Number of knots over time")
plot(mod$mat_sig[-burn], type = "l",
main = "Sigma^2 values over time")
plot(mod$lam[-burn], type = "l",
main = "Lambda values over time")
matplot(mod$mat_beta[-burn,], type = "l",
main = "Plot of regression coefficients over time")
plot(X%*%beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
xtest <- matrix(runif(1000*10, 1000, 10))
pred <- predict.bmars(mod, X = xtest)
xtest <- matrix(runif(1000*10, 1000, 10))
pred <- predict.bmars(mod, X = xtest)
467-170
source('~/Desktop/LANL/Git/LANL-CCS-6/Bayesian Splines/bmars_script.R')
xtest <- matrix(runif(1000*10, 1000, 10))
pred <- predict.bmars(mod, X = xtest)
source('~/Desktop/LANL/Git/LANL-CCS-6/Bayesian Splines/bmars_script.R')
xtest <- matrix(runif(1000*10, 1000, 10))
pred <- predict.bmars(mod, X = xtest)
source('~/Desktop/LANL/Git/LANL-CCS-6/Bayesian Splines/bmars_script.R')
xtest <- matrix(runif(1000*10, 1000, 10))
pred <- predict.bmars(mod, X = xtest)
source('~/Desktop/LANL/Git/LANL-CCS-6/Bayesian Splines/bmars_script.R')
xtest <- matrix(runif(1000*10, 1000, 10))
pred <- predict.bmars(mod, X = xtest)
mod$nknot[ii]
i
ii
j
B
spline.basis(signs = mod$signs[ii,j,1:mod$int[ii,j]],
vars = mod$vars[ii,j,1:mod$int[ii,j]],
knots = mod$knots[ii,j,1:mod$int[ii,j]],
tdat = Xt)
mod$signs[ii,j,1:mod$int[ii,j]]
mod$vars[ii,j,1:mod$int[ii,j]]
mod$knots[ii,j,1:mod$int[ii,j]]
Xt
mod$signs[ii,j,1:mod$int[ii,j]]
ii;j
source('~/Desktop/LANL/Git/LANL-CCS-6/Bayesian Splines/bmars_script.R')
xtest <- matrix(runif(1000*10, 1000, 10))
pred <- predict.bmars(mod, X = xtest)
source('~/Desktop/LANL/Git/LANL-CCS-6/Bayesian Splines/bmars_script.R')
source('~/Desktop/LANL/Git/LANL-CCS-6/Bayesian Splines/bmars_script.R')
source('~/Desktop/LANL/Git/LANL-CCS-6/Bayesian Splines/bmars_script.R')
source('~/Desktop/LANL/Git/LANL-CCS-6/Bayesian Splines/bmars_script.R')
xtest <- matrix(runif(1000*10, 1000, 10))
pred <- predict.bmars(mod, X = xtest)
source('~/Desktop/LANL/Git/LANL-CCS-6/Bayesian Splines/bmars_script.R')
source('~/Desktop/LANL/Git/LANL-CCS-6/Bayesian Splines/bmars_script.R')
xtest <- matrix(runif(1000*10, 1000, 10))
pred <- predict.bmars(mod, X = xtest)
source('~/Desktop/LANL/Git/LANL-CCS-6/Bayesian Splines/bmars_script.R')
rm(list = ls())
source("bmars_script.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
iter <- 10000
mod <- bmars(x, its = iter)
burn <- 1:750
X <- mod$X
beta <- mod$beta
mod$count
plot(mod$nknot[-burn], type = "l",
main = "Number of knots over time")
plot(mod$mat_sig[-burn], type = "l",
main = "Sigma^2 values over time")
plot(mod$lam[-burn], type = "l",
main = "Lambda values over time")
matplot(mod$mat_beta[-burn,], type = "l",
main = "Plot of regression coefficients over time")
plot(X%*%beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
xtest <- matrix(runif(1000*10, 1000, 10))
pred <- predict.bmars(mod, X = xtest)
xtest <- matrix(runif(1000*10), 1000, 10)
pred <- predict.bmars(mod, X = xtest)
rm(list = ls())
source("bmars_script.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
iter <- 10000
mod <- bmars(x, its = iter)
burn <- 1:750
X <- mod$X
beta <- mod$beta
mod$count
plot(mod$nknot[-burn], type = "l",
main = "Number of knots over time")
plot(mod$mat_sig[-burn], type = "l",
main = "Sigma^2 values over time")
plot(mod$lam[-burn], type = "l",
main = "Lambda values over time")
matplot(mod$mat_beta[-burn,], type = "l",
main = "Plot of regression coefficients over time")
plot(X%*%beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
xtest <- matrix(runif(1000*10), 1000, 10)
pred <- predict.bmars(mod, X = xtest)
rm(list = ls())
source("bmars_script.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
iter <- 10000
mod <- bmars(x, its = iter)
burn <- 1:750
X <- mod$X
beta <- mod$beta
mod$count
plot(mod$nknot[-burn], type = "l",
main = "Number of knots over time")
plot(mod$mat_sig[-burn], type = "l",
main = "Sigma^2 values over time")
plot(mod$lam[-burn], type = "l",
main = "Lambda values over time")
matplot(mod$mat_beta[-burn,], type = "l",
main = "Plot of regression coefficients over time")
plot(X%*%beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
xtest <- matrix(runif(1000*10), 1000, 10)
pred <- predict.bmars(mod, X = xtest)
source('~/Desktop/LANL/Git/LANL-CCS-6/Bayesian Splines/bmars_script.R')
xtest <- matrix(runif(1000*10), 1000, 10)
pred <- predict.bmars(mod, X = xtest)
mod$beta[i,1:(mod$nknot[i]+1)]
B
seq_len(mod$nknot[i])
plot(colMeans(pred), f(xtest),
main = "True y values vs predicted y-values")
source('~/Desktop/LANL/Git/LANL-CCS-6/Bayesian Splines/bmars_script.R')
xtest <- matrix(runif(1000*10), 1000, 10)
pred <- predict.bmars(mod, X = xtest)
source('~/Desktop/LANL/Git/LANL-CCS-6/Bayesian Splines/bmars_script.R')
xtest <- matrix(runif(1000*10), 1000, 10)
pred <- predict.bmars(mod, X = xtest)
mod$signs[i,j,1:mod$int[i,j]]
mod$int
i
j
mod$int[i,j]
mod$int[1,1]
head(mod$int)
head(mod$int[,1:6])
rm(list = ls())
source("bmars.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
mod<-bass(x,y)
mod$count
plot(mod$nbasis,type='l')
plot(y,mod$X%*%mod$b); abline(a=0,b=1,col=2)
plot(mod$s2[-c(1:1000)],type='l')
plot(mod$lam[-c(1:1000)],type='l')
xtest<-matrix(runif(1000*10),1000,10)
pred<-predict.bass(mod,xtest)
rm(list = ls())
source("bmars.R")
mod$nint
rm(list = ls())
source("bmars.R")
mod$nint
mod$nbasis
source('~/Desktop/LANL/Git/LANL-CCS-6/Bayesian Splines/bmars_script.R')
rm(list = ls())
source("bmars_script.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
iter <- 10000
mod <- bmars(x, its = iter)
burn <- 1:750
X <- mod$X
beta <- mod$beta
mod$count
plot(mod$nknot[-burn], type = "l",
main = "Number of knots over time")
plot(mod$mat_sig[-burn], type = "l",
main = "Sigma^2 values over time")
plot(mod$lam[-burn], type = "l",
main = "Lambda values over time")
matplot(mod$mat_beta[-burn,], type = "l",
main = "Plot of regression coefficients over time")
plot(X%*%beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
xtest <- matrix(runif(1000*10), 1000, 10)
pred <- predict.bmars(mod, X = xtest)
spline.basis(signs = mod$signs[i,j,1:mod$int[i,j]],
vars = mod$vars[i,j,1:mod$int[i,j]],
knots = mod$knots[i,j,1:mod$int[i,j]],
tdat = Xt)
plot(colMeans(pred), f(xtest),
main = "True y values vs predicted y-values")
abline(a= 0, b = 1, lwd = 5, col = "blue1")
source('~/Desktop/LANL/Git/LANL-CCS-6/Bayesian Splines/bmars_script.R')
xtest <- matrix(runif(1000*10), 1000, 10)
pred <- predict.bmars(mod, X = xtest)
plot(colMeans(pred), f(xtest),
main = "True y values vs predicted y-values")
abline(a= 0, b = 1, lwd = 5, col = "blue1")
xtest <- matrix(runif(1000*10), 1000, 10)
pred <- predict.bmars(mod, X = xtest)
source('~/Desktop/LANL/Git/LANL-CCS-6/Bayesian Splines/bmars_script.R')
xtest <- matrix(runif(1000*10), 1000, 10)
pred <- predict.bmars(mod, X = xtest)
source('~/Desktop/LANL/Git/LANL-CCS-6/Bayesian Splines/bmars_script.R')
mod$beta
source('~/Desktop/LANL/Git/LANL-CCS-6/Bayesian Splines/bmars_script.R')
xtest <- matrix(runif(1000*10), 1000, 10)
pred <- predict.bmars(mod, X = xtest)
plot(colMeans(pred), f(xtest),
main = "True y values vs predicted y-values")
abline(a= 0, b = 1, lwd = 5, col = "blue1")
