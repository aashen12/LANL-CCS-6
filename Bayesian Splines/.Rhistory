main = "Plot of v_i values over time")
# matplot(sqrt(mod$mat_u), type="l",
#         main = "Plot of u_i values over time")
plot(X %*% beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
a<-(y-(X %*% (mod$mat_beta)[nrow(mod$mat_beta),(1:(mod$nknot[nmcmc]+1))]))
plot(a,type="l")
a
var(a)
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
plot(mod$nknot, type = "l",
main = "Number of knots over time")
# plot(mod$alpha, type = "l",
#      main = "alpha^2 values over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
plot(mod$lam, type = "l",
main = "Lambda values over time")
# matplot(mod$mat_beta, type = "l",
#         main = "Plot of regression coefficients over time")
matplot(sqrt(mod$mat_w), type="l",
main = "Plot of v_i values over time")
# matplot(sqrt(mod$mat_u), type="l",
#         main = "Plot of u_i values over time")
plot(X %*% beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
a<-(y-(X %*% (mod$mat_beta)[nrow(mod$mat_beta),(1:(mod$nknot[nmcmc]+1))]))
plot(a,type="l")
a
var(a)
rm(list = ls())
source("robust_bmars2.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
#y[c(1,10,100)] <- y[c(1,10,100)] + rnorm(3, 0, 10)
nmcmc <- 2000
mod <- bmars(x, its = nmcmc, nu = 100, verbose = TRUE)
X <- mod$X
beta <- mod$beta
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)]+1)])
as.vector(beta)
plot(mod$nknot, type = "l",
main = "Number of knots over time")
# plot(mod$alpha, type = "l",
#      main = "alpha^2 values over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
plot(mod$lam, type = "l",
main = "Lambda values over time")
# matplot(mod$mat_beta, type = "l",
#         main = "Plot of regression coefficients over time")
matplot(sqrt(mod$mat_w), type="l",
main = "Plot of v_i values over time")
# matplot(sqrt(mod$mat_u), type="l",
#         main = "Plot of u_i values over time")
plot(X %*% beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
a<-(y-(X %*% (mod$mat_beta)[nrow(mod$mat_beta),(1:(mod$nknot[nmcmc]+1))]))
plot(a,type="l")
a
var(a)
tail(mod$mat_sig)
tail(sqrt(mod$mat_w[,1:25]))
var((y-(X%*%beta)))
var(y)
rm(list = ls())
source("robust_bmars2.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 0.1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
#y[c(1,10,100)] <- y[c(1,10,100)] + rnorm(3, 0, 10)
nmcmc <- 2000
mod <- bmars(x, its = nmcmc, nu = 100, verbose = TRUE)
X <- mod$X
beta <- mod$beta
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)]+1)])
as.vector(beta)
plot(mod$nknot, type = "l",
main = "Number of knots over time")
# plot(mod$alpha, type = "l",
#      main = "alpha^2 values over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
plot(mod$lam, type = "l",
main = "Lambda values over time")
# matplot(mod$mat_beta, type = "l",
#         main = "Plot of regression coefficients over time")
matplot(sqrt(mod$mat_w), type="l",
main = "Plot of v_i values over time")
# matplot(sqrt(mod$mat_u), type="l",
#         main = "Plot of u_i values over time")
plot(X %*% beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
a<-(y-(X %*% (mod$mat_beta)[nrow(mod$mat_beta),(1:(mod$nknot[nmcmc]+1))]))
plot(a,type="l")
a
var(a)
tail(mod$mat_sig)
tail(sqrt(mod$mat_w[,1:25]))
var((y-(X%*%beta)))
var(y)
rm(list = ls())
source("robust_bmars2.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 0.1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
#y[c(1,10,100)] <- y[c(1,10,100)] + rnorm(3, 0, 10)
nmcmc <- 2000
mod <- bmars(x, its = nmcmc, nu = 10, verbose = TRUE)
X <- mod$X
beta <- mod$beta
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)]+1)])
as.vector(beta)
plot(mod$nknot, type = "l",
main = "Number of knots over time")
# plot(mod$alpha, type = "l",
#      main = "alpha^2 values over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
plot(mod$lam, type = "l",
main = "Lambda values over time")
# matplot(mod$mat_beta, type = "l",
#         main = "Plot of regression coefficients over time")
matplot(sqrt(mod$mat_w), type="l",
main = "Plot of v_i values over time")
# matplot(sqrt(mod$mat_u), type="l",
#         main = "Plot of u_i values over time")
plot(X %*% beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
a<-(y-(X %*% (mod$mat_beta)[nrow(mod$mat_beta),(1:(mod$nknot[nmcmc]+1))]))
plot(a,type="l")
a
var(a)
tail(mod$mat_sig)
tail(sqrt(mod$mat_w[,1:25]))
var((y-(X%*%beta)))
var(y)
rm(list = ls())
source("robust_bmars2.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 0.1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
y[c(100,200,300)] <- y[c(100,200,300)] + rnorm(3, 0, 2)
nmcmc <- 2000
mod <- bmars(x, its = nmcmc, nu = 300, verbose = TRUE)
X <- mod$X
beta <- mod$beta
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)]+1)])
as.vector(beta)
plot(mod$nknot, type = "l",
main = "Number of knots over time")
# plot(mod$alpha, type = "l",
#      main = "alpha^2 values over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
plot(mod$lam, type = "l",
main = "Lambda values over time")
# matplot(mod$mat_beta, type = "l",
#         main = "Plot of regression coefficients over time")
matplot(sqrt(mod$mat_w), type="l",
main = "Plot of v_i values over time")
# matplot(sqrt(mod$mat_u), type="l",
#         main = "Plot of u_i values over time")
plot(X %*% beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
a<-(y-(X %*% (mod$mat_beta)[nrow(mod$mat_beta),(1:(mod$nknot[nmcmc]+1))]))
plot(a,type="l")
a
var(a)
tail(mod$mat_sig)
tail(sqrt(mod$mat_w[,1:25]))
var((y-(X%*%beta)))
var(y)
rm(list = ls())
source("robust_bmars2.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 0.1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
y[c(100,200,300)] <- y[c(100,200,300)] + rnorm(3, 0, 10)
nmcmc <- 2000
mod <- bmars(x, its = nmcmc, nu = 300, verbose = TRUE)
X <- mod$X
beta <- mod$beta
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)]+1)])
as.vector(beta)
plot(mod$nknot, type = "l",
main = "Number of knots over time")
# plot(mod$alpha, type = "l",
#      main = "alpha^2 values over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
plot(mod$lam, type = "l",
main = "Lambda values over time")
# matplot(mod$mat_beta, type = "l",
#         main = "Plot of regression coefficients over time")
matplot(sqrt(mod$mat_w[seq(nmcmc/2,nmcmc,by=2),]), type="l",
main = "Plot of v_i values over time")
# matplot(sqrt(mod$mat_u), type="l",
#         main = "Plot of u_i values over time")
plot(X %*% beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
a<-(y-(X %*% (mod$mat_beta)[nrow(mod$mat_beta),(1:(mod$nknot[nmcmc]+1))]))
plot(a,type="l")
a
var(a)
tail(mod$mat_sig)
tail(sqrt(mod$mat_w[,1:25]))
var((y-(X%*%beta)))
var(y)
rm(list = ls())
source("robust_bmars2.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 0.1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
y[c(100,200,300)] <- y[c(100,200,300)] + rnorm(3, 0, 10)
nmcmc <- 2000
mod <- bmars(x, its = nmcmc, nu = 10, verbose = TRUE)
X <- mod$X
beta <- mod$beta
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)]+1)])
as.vector(beta)
plot(mod$nknot, type = "l",
main = "Number of knots over time")
# plot(mod$alpha, type = "l",
#      main = "alpha^2 values over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
plot(mod$lam, type = "l",
main = "Lambda values over time")
# matplot(mod$mat_beta, type = "l",
#         main = "Plot of regression coefficients over time")
matplot(sqrt(mod$mat_w[seq(nmcmc/2,nmcmc,by=2),]), type="l",
main = "Plot of v_i values over time")
# matplot(sqrt(mod$mat_u), type="l",
#         main = "Plot of u_i values over time")
plot(X %*% beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
a<-(y-(X %*% (mod$mat_beta)[nrow(mod$mat_beta),(1:(mod$nknot[nmcmc]+1))]))
plot(a,type="l")
var(a)
tail(mod$mat_sig)
tail(sqrt(mod$mat_w[,1:25]))
var((y-(X%*%beta)))
var(y)
rm(list = ls())
source("robust_bmars2.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 0.1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
y[c(100,200,300)] <- 1000#y[c(100,200,300)] + rnorm(3, 0, 1000)
nmcmc <- 2000
mod <- bmars(x, its = nmcmc, nu = 300, verbose = TRUE)
X <- mod$X
beta <- mod$beta
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)]+1)])
as.vector(beta)
plot(mod$nknot, type = "l",
main = "Number of knots over time")
# plot(mod$alpha, type = "l",
#      main = "alpha^2 values over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
plot(mod$lam, type = "l",
main = "Lambda values over time")
# matplot(mod$mat_beta, type = "l",
#         main = "Plot of regression coefficients over time")
matplot(sqrt(mod$mat_w[seq(nmcmc/2,nmcmc,by=2),]), type="l",
main = "Plot of v_i values over time")
# matplot(sqrt(mod$mat_u), type="l",
#         main = "Plot of u_i values over time")
plot(X %*% beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
a<-(y-(X %*% (mod$mat_beta)[nrow(mod$mat_beta),(1:(mod$nknot[nmcmc]+1))]))
rm(list = ls())
source("robust_bmars2.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 0.1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
index <- sample(n, 50)
y[index] <- y[index] + rnorm(index, 0, 10)
nmcmc <- 2000
mod <- bmars(x, its = nmcmc, nu = 300, verbose = TRUE)
X <- mod$X
beta <- mod$beta
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)]+1)])
as.vector(beta)
plot(mod$nknot, type = "l",
main = "Number of knots over time")
# plot(mod$alpha, type = "l",
#      main = "alpha^2 values over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
plot(mod$lam, type = "l",
main = "Lambda values over time")
# matplot(mod$mat_beta, type = "l",
#         main = "Plot of regression coefficients over time")
matplot(sqrt(mod$mat_w[seq(nmcmc/2,nmcmc,by=2),]), type="l",
main = "Plot of v_i values over time")
# matplot(sqrt(mod$mat_u), type="l",
#         main = "Plot of u_i values over time")
plot(X %*% beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
a<-(y-(X %*% (mod$mat_beta)[nrow(mod$mat_beta),(1:(mod$nknot[nmcmc]+1))]))
plot(a,type="l")
var(a)
tail(mod$mat_sig)
tail(sqrt(mod$mat_w[,1:25]))
var((y-(X%*%beta)))
var(y)
rm(list = ls())
source("robust_bmars2.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 0.1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
index <- sample(n, 50)
y[index] <- y[index] + rnorm(index, 0, 10)
nmcmc <- 2000
mod <- bmars(x, its = nmcmc, nu = 20, verbose = TRUE)
X <- mod$X
beta <- mod$beta
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)]+1)])
as.vector(beta)
plot(mod$nknot, type = "l",
main = "Number of knots over time")
# plot(mod$alpha, type = "l",
#      main = "alpha^2 values over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
plot(mod$lam, type = "l",
main = "Lambda values over time")
# matplot(mod$mat_beta, type = "l",
#         main = "Plot of regression coefficients over time")
matplot(sqrt(mod$mat_w[seq(nmcmc/2,nmcmc,by=2),]), type="l",
main = "Plot of v_i values over time")
# matplot(sqrt(mod$mat_u), type="l",
#         main = "Plot of u_i values over time")
plot(X %*% beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
a<-(y-(X %*% (mod$mat_beta)[nrow(mod$mat_beta),(1:(mod$nknot[nmcmc]+1))]))
plot(a,type="l")
var(a)
tail(mod$mat_sig)
tail(sqrt(mod$mat_w[,1:25]))
var((y-(X%*%beta)))
var(y)
var(a[-index])
rm(list = ls())
source("robust_bmars2.R")
set.seed(12)
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 0.1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
index <- sample(n, 50)
y[index] <- y[index] + rnorm(index, 0, 10)
nmcmc <- 2000
mod <- bmars(x, its = nmcmc, nu = 300, verbose = TRUE)
X <- mod$X
beta <- mod$beta
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)]+1)])
as.vector(beta)
plot(mod$nknot, type = "l",
main = "Number of knots over time")
# plot(mod$alpha, type = "l",
#      main = "alpha^2 values over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
plot(mod$lam, type = "l",
main = "Lambda values over time")
# matplot(mod$mat_beta, type = "l",
#         main = "Plot of regression coefficients over time")
matplot(sqrt(mod$mat_w[seq(nmcmc/2,nmcmc,by=2),]), type="l",
main = "Plot of v_i values over time")
# matplot(sqrt(mod$mat_u), type="l",
#         main = "Plot of u_i values over time")
plot(X %*% beta, y,
main = "Bayesian predicted values vs actual y values")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
a<-(y-(X %*% (mod$mat_beta)[nrow(mod$mat_beta),(1:(mod$nknot[nmcmc]+1))]))
plot(a,type="l")
var(a[-index])
tail(mod$mat_sig)
tail(sqrt(mod$mat_w[,1:25]))
var((y-(X%*%beta)))
var(y)
